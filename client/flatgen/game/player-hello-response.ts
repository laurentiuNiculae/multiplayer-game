// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from '../../flatbuffers/flatbuffers.js';

export class PlayerHelloResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PlayerHelloResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPlayerHelloResponse(bb:flatbuffers.ByteBuffer, obj?:PlayerHelloResponse):PlayerHelloResponse {
  return (obj || new PlayerHelloResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPlayerHelloResponse(bb:flatbuffers.ByteBuffer, obj?:PlayerHelloResponse):PlayerHelloResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PlayerHelloResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startPlayerHelloResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt32(0, id, 0);
}

static endPlayerHelloResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPlayerHelloResponse(builder:flatbuffers.Builder, id:number):flatbuffers.Offset {
  PlayerHelloResponse.startPlayerHelloResponse(builder);
  PlayerHelloResponse.addId(builder, id);
  return PlayerHelloResponse.endPlayerHelloResponse(builder);
}
}
