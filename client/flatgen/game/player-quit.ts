// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from '../../flatbuffers/flatbuffers.js';

import { EventKind } from '../../flatgen/game/event-kind.js';


export class PlayerQuit {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PlayerQuit {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPlayerQuit(bb:flatbuffers.ByteBuffer, obj?:PlayerQuit):PlayerQuit {
  return (obj || new PlayerQuit()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPlayerQuit(bb:flatbuffers.ByteBuffer, obj?:PlayerQuit):PlayerQuit {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PlayerQuit()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

kind():EventKind {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EventKind.NilEvent;
}

id():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startPlayerQuit(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addKind(builder:flatbuffers.Builder, kind:EventKind) {
  builder.addFieldInt8(0, kind, EventKind.NilEvent);
}

static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt32(1, id, 0);
}

static endPlayerQuit(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPlayerQuit(builder:flatbuffers.Builder, kind:EventKind, id:number):flatbuffers.Offset {
  PlayerQuit.startPlayerQuit(builder);
  PlayerQuit.addKind(builder, kind);
  PlayerQuit.addId(builder, id);
  return PlayerQuit.endPlayerQuit(builder);
}
}
