// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import * as flatbuffers from '../../flatbuffers/flatbuffers.js';
import { EventKind } from '../../flatgen/game/event-kind.js';
export class BunicaEvent {
    bb = null;
    bb_pos = 0;
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsBunicaEvent(bb, obj) {
        return (obj || new BunicaEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsBunicaEvent(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new BunicaEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    kind() {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : EventKind.NilEvent;
    }
    id() {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    }
    bunica() {
        const offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    }
    bunica2() {
        const offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    }
    bunica3() {
        const offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    }
    bunica4() {
        const offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    }
    bunica5() {
        const offset = this.bb.__offset(this.bb_pos, 16);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    }
    static startBunicaEvent(builder) {
        builder.startObject(7);
    }
    static addKind(builder, kind) {
        builder.addFieldInt8(0, kind, EventKind.NilEvent);
    }
    static addId(builder, id) {
        builder.addFieldInt32(1, id, 0);
    }
    static addBunica(builder, bunica) {
        builder.addFieldInt32(2, bunica, 0);
    }
    static addBunica2(builder, bunica2) {
        builder.addFieldInt32(3, bunica2, 0);
    }
    static addBunica3(builder, bunica3) {
        builder.addFieldInt32(4, bunica3, 0);
    }
    static addBunica4(builder, bunica4) {
        builder.addFieldInt32(5, bunica4, 0);
    }
    static addBunica5(builder, bunica5) {
        builder.addFieldInt32(6, bunica5, 0);
    }
    static endBunicaEvent(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createBunicaEvent(builder, kind, id, bunica, bunica2, bunica3, bunica4, bunica5) {
        BunicaEvent.startBunicaEvent(builder);
        BunicaEvent.addKind(builder, kind);
        BunicaEvent.addId(builder, id);
        BunicaEvent.addBunica(builder, bunica);
        BunicaEvent.addBunica2(builder, bunica2);
        BunicaEvent.addBunica3(builder, bunica3);
        BunicaEvent.addBunica4(builder, bunica4);
        BunicaEvent.addBunica5(builder, bunica5);
        return BunicaEvent.endBunicaEvent(builder);
    }
}
